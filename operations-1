Mappings
Field Data Types
• Simple Types, including:
‒ text: for full text (analyzed) strings
‒ keyword: for exact value strings
‒ date: string formatted as dates, or numeric dates
‒ integer types: like byte, short, integer, long
‒ floating-point numbers: float, double, half_float, scaled_float
‒ boolean
‒ ip: for IPv4 or IPv6 addresses
• Hierarchical Types: like object and nested
• Specialized Types: geo_point, geo_shape and percolator

GET logs/_mappings

Defining a Mapping
PUT logs2
{
	"mappings": {
		"log": {
			"properties": {
				"level": {
					"type": "keyword"
				},
				"logdate": {
					"type": "date"
				},
				"response": {
					"type": "long"
				},
				"message" : {
					"type" : "text"
				}
			}
		}
	}
}
---------------------------------
PUT my_index/_settings
{
	"refresh_interval": "1s"
}

The Flush API
POST my_index/_flush

Synced Flush
POST my_index/_flush/synced

The force merge API
POST my_index/_forcemerge

----------------------------------
Using _reindex
POST _reindex
{
	"source" : {
		"index" : "my_index"
	},
	"dest" : {
		"index" : "my_other_index"
	}
}

-----------------------------------
POST _reindex
{
	"conflicts" : "proceed",
	"source" : {
		"index" : "my_index"
	},
	"dest" : {
		"index" : "my_other_index",
		"version_type" : "external"
	}
}
------------------------------------------------

POST _reindex
{
"source" : {
	"index" : "my_index"
},
"dest" : {
	"index" : "my_other_index",
	"op_type" : "create"
}
}

POST _reindex
{
	"source" : {
		"index" : ["logs-2017-01","logs-2017-02"]
	},
	"dest" : {
		"index" : "logs-2017"
	}
}

POST _reindex
{
	"source": {
		"index": "my_index",
		"remote": {
			"host": "http://otherhost:9200",
			"username": "USERNAME",
			"password": "PASSWORD"
		}
	},
	"dest": {
		"index": "my_other_index"
	}
}

The _close Endpoint

POST tweets-yesterday/_flush/synced
POST tweets-yesterday/_close
POST tweets-yesterday/_open

Configuring Delayed Shard Allocation

PUT _all/_settings
{
	"settings" : {
		"index.unassigned.node_left.delayed_timeout" : "5m"
	}
}

Total Shards Per Node (Index)

PUT my_index_3
{
	"settings": {
		"routing": {
			"allocation": {
				"total_shards_per_node": 3
			}
		}
	}
}
